# ============================================
# 多阶段构建 - 上下文工程六要素后端服务
# ============================================

# 阶段1：构建阶段
FROM golang:1.21-alpine AS builder

# 设置工作目录
WORKDIR /build

# 安装必要的工具
RUN apk add --no-cache git gcc musl-dev

# 设置 Go 代理（加速下载）
ENV GOPROXY=https://goproxy.cn,direct
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64

# 复制 go.mod 和 go.sum
COPY backend/go.mod backend/go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY backend/ .

# 构建二进制文件
RUN go build -ldflags="-s -w" -o cese-qoder main.go

# 阶段2：运行阶段
FROM alpine:latest

# 安装运行时依赖
RUN apk --no-cache add ca-certificates tzdata wget

# 设置时区
ENV TZ=Asia/Shanghai

# 创建非 root 用户
RUN addgroup -g 1000 app && \
    adduser -D -u 1000 -G app app

# 设置工作目录
WORKDIR /app

# 创建日志目录
RUN mkdir -p logs && chown -R app:app /app

# 从构建阶段复制二进制文件
COPY --from=builder --chown=app:app /build/cese-qoder .

# 切换到非 root 用户
USER app

# 暴露端口
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# 启动服务
CMD ["./cese-qoder"]
